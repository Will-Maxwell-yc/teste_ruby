{"version":3,"file":"teardown-context.js","sources":["../src/teardown-context.ts"],"sourcesContent":["import type { TestContext } from './setup-context';\nimport settled from './settled.ts';\nimport { _cleanupOnerror } from './setup-onerror.ts';\nimport { destroy } from '@ember/destroyable';\n\nexport interface TeardownContextOptions {\n  waitForSettled?: boolean | undefined;\n}\n\n/**\n  Used by test framework addons to tear down the provided context after testing is completed.\n\n  Responsible for:\n\n  - un-setting the \"global testing context\" (`unsetContext`)\n  - destroy the contexts owner object\n  - remove AJAX listeners\n\n  @public\n  @param {Object} context the context to setup\n  @param {Object} [options] options used to override defaults\n  @param {boolean} [options.waitForSettled=true] should the teardown wait for `settled()`ness\n  @returns {Promise<void>} resolves when settled\n*/\nexport default function teardownContext(\n  context: TestContext,\n  { waitForSettled = true }: TeardownContextOptions = {},\n): Promise<void> {\n  return Promise.resolve()\n    .then(() => {\n      _cleanupOnerror(context);\n\n      destroy(context);\n    })\n    .finally(() => {\n      if (waitForSettled) {\n        return settled();\n      }\n\n      return;\n    });\n}\n"],"names":["teardownContext","context","waitForSettled","Promise","resolve","then","_cleanupOnerror","destroy","finally","settled"],"mappings":";;;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASA,eAAeA,CACrCC,OAAoB,EACpB;AAAEC,EAAAA,cAAc,GAAG,IAAA;AAA6B,CAAC,GAAG,EAAE,EACvC;EACf,OAAOC,OAAO,CAACC,OAAO,EAAE,CACrBC,IAAI,CAAC,MAAM;IACVC,eAAe,CAACL,OAAO,CAAC,CAAA;IAExBM,OAAO,CAACN,OAAO,CAAC,CAAA;AAClB,GAAC,CAAC,CACDO,OAAO,CAAC,MAAM;AACb,IAAA,IAAIN,cAAc,EAAE;MAClB,OAAOO,OAAO,EAAE,CAAA;AAClB,KAAA;AAEA,IAAA,OAAA;AACF,GAAC,CAAC,CAAA;AACN;;;;"}