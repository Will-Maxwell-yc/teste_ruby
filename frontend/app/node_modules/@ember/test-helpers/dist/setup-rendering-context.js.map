{"version":3,"file":"setup-rendering-context.js","sources":["../src/setup-rendering-context.ts"],"sourcesContent":["import { run } from '@ember/runloop';\nimport Ember from 'ember';\nimport global from './global.ts';\nimport {\n  type BaseContext,\n  type TestContext,\n  isTestContext,\n  getContext,\n} from './setup-context.ts';\nimport settled from './settled.ts';\nimport getRootElement from './dom/get-root-element.ts';\nimport type { Owner } from './build-owner.ts';\nimport getTestMetadata from './test-metadata.ts';\nimport { assert } from '@ember/debug';\nimport { runHooks } from './helper-hooks.ts';\nimport hasEmberVersion from './has-ember-version.ts';\nimport isComponent from './-internal/is-component.ts';\nimport { ComponentRenderMap, SetUsage } from './setup-context.ts';\n\n// the built in types do not provide types for @ember/template-compilation\n// eslint-disable-next-line @typescript-eslint/ban-ts-comment\n// @ts-ignore\nimport { precompileTemplate } from '@ember/template-compilation';\n\nconst OUTLET_TEMPLATE = precompileTemplate(`{{outlet}}`, { strictMode: false });\nconst EMPTY_TEMPLATE = precompileTemplate(``, { strictMode: false });\nconst INVOKE_PROVIDED_COMPONENT = precompileTemplate(\n  `<this.ProvidedComponent />`,\n  { strictMode: false },\n);\n\nconst hasCalledSetupRenderingContext = Symbol();\n\nexport interface RenderingTestContext extends TestContext {\n  element: Element | Document;\n  [hasCalledSetupRenderingContext]?: true;\n}\n\n//  Isolates the notion of transforming a TextContext into a RenderingTestContext.\n// eslint-disable-next-line require-jsdoc\nfunction prepare(context: TestContext): RenderingTestContext {\n  (context as RenderingTestContext)[hasCalledSetupRenderingContext] = true;\n  return context as RenderingTestContext;\n}\n\n// eslint-disable-next-line require-jsdoc\nexport function isRenderingTestContext(\n  context: BaseContext,\n): context is RenderingTestContext {\n  return isTestContext(context) && hasCalledSetupRenderingContext in context;\n}\n\n/**\n  @private\n  @param {Ember.ApplicationInstance} owner the current owner instance\n  @param {string} templateFullName the fill template name\n  @returns {Template} the template representing `templateFullName`\n*/\nfunction lookupTemplate(owner: Owner, templateFullName: `${string}:${string}`) {\n  const template = owner.lookup(templateFullName);\n  if (typeof template === 'function') return template(owner);\n  return template;\n}\n\n/**\n  @private\n  @param {Ember.ApplicationInstance} owner the current owner instance\n  @returns {Template} a template representing {{outlet}}\n*/\nfunction lookupOutletTemplate(owner: Owner): any {\n  let OutletTemplate = lookupTemplate(owner, 'template:-outlet');\n  if (!OutletTemplate) {\n    owner.register('template:-outlet', OUTLET_TEMPLATE);\n    OutletTemplate = lookupTemplate(owner, 'template:-outlet');\n  }\n\n  return OutletTemplate;\n}\n\nlet templateId = 0;\n\nexport interface RenderOptions {\n  /**\n    The owner object to use as the basis for the template. In most cases you\n    will not need to specify this, however if you are using ember-engines\n    it is possible to specify the _engine's_ owner instead of the host\n    applications.\n  */\n  owner?: Owner;\n}\n\n/**\n  Renders the provided template and appends it to the DOM.\n\n  @public\n  @param {Template|Component} templateFactoryOrComponent the component (or template) to render\n  @param {RenderOptions} options options hash containing engine owner ({ owner: engineOwner })\n  @returns {Promise<void>} resolves when settled\n\n  @example\n  <caption>\n    Render a div element with the class 'container'.\n  </caption>\n  await render(hbs`<div class=\"container\"></div>`);\n*/\nexport function render(\n  templateFactoryOrComponent: object,\n  options?: RenderOptions,\n): Promise<void> {\n  let context = getContext();\n\n  if (!templateFactoryOrComponent) {\n    throw new Error('you must pass a template to `render()`');\n  }\n\n  return Promise.resolve()\n    .then(() => runHooks('render', 'start'))\n    .then(() => {\n      if (!context || !isRenderingTestContext(context)) {\n        throw new Error(\n          'Cannot call `render` without having first called `setupRenderingContext`.',\n        );\n      }\n\n      const { owner } = context;\n      const testMetadata = getTestMetadata(context);\n      testMetadata.usedHelpers.push('render');\n\n      // SAFETY: this is all wildly unsafe, because it is all using private API.\n      // At some point we should define a path forward for this kind of internal\n      // API. For now, just flagging it as *NOT* being safe!\n      const toplevelView = owner.lookup('-top-level-view:main') as any;\n      const OutletTemplate = lookupOutletTemplate(owner);\n      const ownerToRenderFrom = options?.owner || owner;\n\n      if (isComponent(templateFactoryOrComponent)) {\n        // We use this to track when `render` is used with a component so that we can throw an\n        // assertion if `this.{set,setProperty} is used in the same test\n        ComponentRenderMap.set(context, true);\n\n        const setCalls = SetUsage.get(context);\n\n        if (setCalls !== undefined) {\n          assert(\n            `You cannot call \\`this.set\\` or \\`this.setProperties\\` when passing a component to \\`render\\`, but they were called for the following properties:\\n${setCalls\n              .map((key) => `  - ${key}`)\n              .join('\\n')}`,\n          );\n        }\n\n        context = {\n          ProvidedComponent: templateFactoryOrComponent,\n        };\n        templateFactoryOrComponent = INVOKE_PROVIDED_COMPONENT;\n      }\n\n      templateId += 1;\n      const templateFullName = `template:-undertest-${templateId}` as const;\n      ownerToRenderFrom.register(templateFullName, templateFactoryOrComponent);\n      const template = lookupTemplate(ownerToRenderFrom, templateFullName);\n\n      const outletState = {\n        render: {\n          owner, // always use the host app owner for application outlet\n          into: undefined,\n          outlet: 'main',\n          name: 'application',\n          controller: undefined,\n          ViewClass: undefined,\n          template: OutletTemplate,\n        },\n\n        outlets: {\n          main: {\n            render: {\n              owner: ownerToRenderFrom, // the actual owner to be used for any lookups\n              into: undefined,\n              outlet: 'main',\n              name: 'index',\n              controller: context,\n              ViewClass: undefined,\n              template,\n              outlets: {},\n            },\n            outlets: {},\n          },\n        },\n      };\n      toplevelView.setOutletState(outletState);\n\n      // Ember's rendering engine is integration with the run loop so that when a run\n      // loop starts, the rendering is scheduled to be done.\n      //\n      // Ember should be ensuring an instance on its own here (the act of\n      // setting outletState should ensureInstance, since we know we need to\n      // render), but on Ember < 3.23 that is not guaranteed.\n      if (!hasEmberVersion(3, 23)) {\n        // SAFETY: this was correct and type checked on the Ember v3 types, but\n        // since the `run` namespace does not exist in Ember v4, this no longer\n        // can be type checked. When (eventually) dropping support for Ember v3,\n        // and therefore for versions before 3.23, this can be removed entirely.\n        (run as any).backburner.ensureInstance();\n      }\n\n      // returning settled here because the actual rendering does not happen until\n      // the renderer detects it is dirty (which happens on backburner's end\n      // hook), see the following implementation details:\n      //\n      // * [view:outlet](https://github.com/emberjs/ember.js/blob/f94a4b6aef5b41b96ef2e481f35e07608df01440/packages/ember-glimmer/lib/views/outlet.js#L129-L145) manually dirties its own tag upon `setOutletState`\n      // * [backburner's custom end hook](https://github.com/emberjs/ember.js/blob/f94a4b6aef5b41b96ef2e481f35e07608df01440/packages/ember-glimmer/lib/renderer.js#L145-L159) detects that the current revision of the root is no longer the latest, and triggers a new rendering transaction\n      return settled();\n    })\n    .then(() => runHooks('render', 'end'));\n}\n\n/**\n  Clears any templates previously rendered. This is commonly used for\n  confirming behavior that is triggered by teardown (e.g.\n  `willDestroyElement`).\n\n  @public\n  @returns {Promise<void>} resolves when settled\n*/\nexport function clearRender(): Promise<void> {\n  const context = getContext();\n\n  if (!context || !isRenderingTestContext(context)) {\n    throw new Error(\n      'Cannot call `clearRender` without having first called `setupRenderingContext`.',\n    );\n  }\n\n  return render(EMPTY_TEMPLATE);\n}\n\n/**\n  Used by test framework addons to setup the provided context for rendering.\n\n  `setupContext` must have been ran on the provided context\n  prior to calling `setupRenderingContext`.\n\n  Responsible for:\n\n  - Setup the basic framework used for rendering by the\n    `render` helper.\n  - Ensuring the event dispatcher is properly setup.\n  - Setting `this.element` to the root element of the testing\n    container (things rendered via `render` will go _into_ this\n    element).\n\n  @public\n  @param {TestContext} context the context to setup for rendering\n  @returns {Promise<RenderingTestContext>} resolves with the context that was setup\n\n  @example\n  <caption>\n    Rendering out a paragraph element containing the content 'hello', and then clearing that content via clearRender.\n  </caption>\n\n  await render(hbs`<p>Hello!</p>`);\n  assert.equal(this.element.textContent, 'Hello!', 'has rendered content');\n  await clearRender();\n  assert.equal(this.element.textContent, '', 'has rendered content');\n*/\nexport default function setupRenderingContext(\n  context: TestContext,\n): Promise<RenderingTestContext> {\n  const testMetadata = getTestMetadata(context);\n  testMetadata.setupTypes.push('setupRenderingContext');\n\n  const renderingContext = prepare(context);\n\n  return Promise.resolve()\n    .then(() => {\n      const { owner } = renderingContext;\n\n      // When the host app uses `setApplication` (instead of `setResolver`) the event dispatcher has\n      // already been setup via `applicationInstance.boot()` in `./build-owner`. If using\n      // `setResolver` (instead of `setApplication`) a \"mock owner\" is created by extending\n      // `Ember._ContainerProxyMixin` and `Ember._RegistryProxyMixin` in this scenario we need to\n      // manually start the event dispatcher.\n      if (owner._emberTestHelpersMockOwner) {\n        const dispatcher =\n          owner.lookup('event_dispatcher:main') ||\n          (Ember.EventDispatcher as any).create();\n        dispatcher.setup({}, '#ember-testing');\n      }\n\n      const OutletView = owner.factoryFor\n        ? owner.factoryFor('view:-outlet')\n        : owner._lookupFactory!('view:-outlet');\n\n      const environment = owner.lookup('-environment:main');\n      const template = owner.lookup('template:-outlet');\n\n      const toplevelView = OutletView.create({\n        template,\n        environment,\n      });\n\n      owner.register('-top-level-view:main', {\n        create() {\n          return toplevelView;\n        },\n      });\n\n      // initially render a simple empty template\n      return render(EMPTY_TEMPLATE).then(() => {\n        run(toplevelView, 'appendTo', getRootElement());\n\n        return settled();\n      });\n    })\n    .then(() => {\n      Object.defineProperty(renderingContext, 'element', {\n        configurable: true,\n        enumerable: true,\n        // ensure the element is based on the wrapping toplevel view\n        // Ember still wraps the main application template with a\n        // normal tagged view\n        //\n        // In older Ember versions (2.4) the element itself is not stable,\n        // and therefore we cannot update the `this.element` until after the\n        // rendering is completed\n        value:\n          global.EmberENV._APPLICATION_TEMPLATE_WRAPPER !== false\n            ? getRootElement().querySelector('.ember-view')\n            : getRootElement(),\n\n        writable: false,\n      });\n\n      return renderingContext;\n    });\n}\n"],"names":["OUTLET_TEMPLATE","precompileTemplate","strictMode","EMPTY_TEMPLATE","INVOKE_PROVIDED_COMPONENT","hasCalledSetupRenderingContext","Symbol","prepare","context","isRenderingTestContext","isTestContext","lookupTemplate","owner","templateFullName","template","lookup","lookupOutletTemplate","OutletTemplate","register","templateId","render","templateFactoryOrComponent","options","getContext","Error","Promise","resolve","then","runHooks","testMetadata","getTestMetadata","usedHelpers","push","toplevelView","ownerToRenderFrom","isComponent","ComponentRenderMap","set","setCalls","SetUsage","get","undefined","assert","map","key","join","ProvidedComponent","outletState","into","outlet","name","controller","ViewClass","outlets","main","setOutletState","hasEmberVersion","run","backburner","ensureInstance","settled","clearRender","setupRenderingContext","setupTypes","renderingContext","_emberTestHelpersMockOwner","dispatcher","Ember","EventDispatcher","create","setup","OutletView","factoryFor","_lookupFactory","environment","getRootElement","Object","defineProperty","configurable","enumerable","value","global","EmberENV","_APPLICATION_TEMPLATE_WRAPPER","querySelector","writable"],"mappings":"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"}